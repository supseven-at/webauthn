(()=>{var w=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});function y(e){return new TextEncoder().encode(e)}function c(e){let t=new Uint8Array(e),n="";for(let r of t)n+=String.fromCharCode(r);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function p(e){let t=e.replace(/-/g,"+").replace(/_/g,"/"),n=(4-t.length%4)%4,i=t.padEnd(t.length+n,"="),r=atob(i),a=new ArrayBuffer(r.length),l=new Uint8Array(a);for(let s=0;s<r.length;s++)l[s]=r.charCodeAt(s);return a}function d(){return window?.PublicKeyCredential!==void 0&&typeof window.PublicKeyCredential=="function"}function m(e){let{id:t}=e;return{...e,id:p(t),transports:e.transports}}function E(e){return e==="localhost"||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}var o=class extends Error{constructor(t,n="WebAuthnError"){super(t),this.name=n}};function A({error:e,options:t}){var n,i;let{publicKey:r}=t;if(!r)throw Error("options was missing required publicKey property");if(e.name==="AbortError"){if(t.signal===new AbortController().signal)return new o("Registration ceremony was sent an abort signal","AbortError")}else if(e.name==="ConstraintError"){if(((n=r.authenticatorSelection)===null||n===void 0?void 0:n.requireResidentKey)===!0)return new o("Discoverable credentials were required but no available authenticator supported it","ConstraintError");if(((i=r.authenticatorSelection)===null||i===void 0?void 0:i.userVerification)==="required")return new o("User verification was required but no available authenticator supported it","ConstraintError")}else{if(e.name==="InvalidStateError")return new o("The authenticator was previously registered","InvalidStateError");if(e.name!=="NotAllowedError"){if(e.name==="NotSupportedError")return r.pubKeyCredParams.filter(l=>l.type==="public-key").length===0?new o('No entry in pubKeyCredParams was of type "public-key"',"NotSupportedError"):new o("No available authenticator supported any of the specified pubKeyCredParams algorithms","NotSupportedError");if(e.name==="SecurityError"){let a=window.location.hostname;if(E(a)){if(r.rp.id!==a)return new o(`The RP ID "${r.rp.id}" is invalid for this domain`,"SecurityError")}else return new o(`${window.location.hostname} is an invalid domain`,"SecurityError")}else if(e.name==="TypeError"){if(r.user.id.byteLength<1||r.user.id.byteLength>64)return new o("User ID was not between 1 and 64 characters","TypeError")}else if(e.name==="UnknownError")return new o("The authenticator was unable to process the specified options, or could not create a new credential","UnknownError")}}return e}var u=class{createNewAbortSignal(){this.controller&&this.controller.abort("Cancelling existing WebAuthn API call for new one");let t=new AbortController;return this.controller=t,t.signal}},v=new u,C=["cross-platform","platform"];function S(e){if(e&&!(C.indexOf(e)<0))return e}async function h(e){var t;if(!d())throw new Error("WebAuthn is not supported in this browser");let i={publicKey:{...e,challenge:p(e.challenge),user:{...e.user,id:y(e.user.id)},excludeCredentials:(t=e.excludeCredentials)===null||t===void 0?void 0:t.map(m)}};i.signal=v.createNewAbortSignal();let r;try{r=await navigator.credentials.create(i)}catch(g){throw A({error:g,options:i})}if(!r)throw new Error("Registration was not completed");let{id:a,rawId:l,response:s,type:b}=r,f;return typeof s.getTransports=="function"&&(f=s.getTransports()),{id:a,rawId:c(l),response:{attestationObject:c(s.attestationObject),clientDataJSON:c(s.clientDataJSON),transports:f},type:b,clientExtensionResults:r.getClientExtensionResults(),authenticatorAttachment:S(r.authenticatorAttachment)}}w(["TYPO3/CMS/Backend/Notification"],function(e){let t=document.querySelector("#addWebauthnForm");if(!d()){t.style.display="none";return}t.querySelectorAll("[data-toggle=addWebauthn]").forEach(n=>{n.addEventListener("click",async()=>{try{let i=JSON.parse(t.dataset.creationOptions),r=await h(i),a=n.closest("form");a.querySelector("#credential").value=JSON.stringify(r),a.submit()}catch(i){console.error(i),e.error(TYPO3.lang.registerError||"Device not registered")}})})});})();
